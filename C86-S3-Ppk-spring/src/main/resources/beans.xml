<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="hello" class="com.yc.spring.Hello">
     </bean>
    <bean id="mdao" class="com.yc.spring.dao.MySQLUserDao">
     </bean>  
     <bean id="odao" class="com.yc.spring.dao.OracleUserDao">
      </bean>

	<!-- 
		Spring 依赖注入(DI) 注入方式有三种
		注入：对象属性初始化注入
		1.setter注入 （set方法注入）
		2.构造方法注入
		3.接口注入 ==>  SpringMVC大量的应用
	
	 -->
	 
	 <bean id="p1" class="com.yc.spring.bean.Person">
	 <property name="name" value="武松" ></property>
	 <property name="age" value="35" ></property>
	 <property name="killeds">
	 	<list>
	 		<value type="java.lang.String">潘金莲</value>
	 		<value >西门庆</value>
	 		<value type="java.lang.String">老虎</value>
	 		<value >null</value>
	 		<null></null>
	 	</list>
	 </property>
	 </bean>
	 
	 <!-- primary="true"设置当前的bean是主要的  默认class方式获取 -->
	 <bean class="com.yc.spring.bean.Person" primary="true">
	  <constructor-arg name="name" value="李逵" ></constructor-arg>
	   <constructor-arg name="alisa" value="黑旋风" ></constructor-arg>
	    <constructor-arg name="age" value="33" index= "0" ></constructor-arg>
	 </bean>
	 
	 <bean id="p2" class="com.yc.spring.bean.Person" >
	  <property name="name" value="吴用" ></property>
	 <property name="age" value="38" ></property>
	 <property name="friend" ref="p3">
	 </property>
	 </bean>
	 
	 <bean id="p3" class="com.yc.spring.bean.Person">
	 		 <property name="name" value="花荣" ></property>
	 	</bean>
	 
	 <!-- 工厂方法创建对象 -->
	  <bean id="p4" class="com.yc.spring.bean.Person"
	   factory-method="PersonFactory" >
	  	<property name="name" value="王英" ></property>
	 </bean>
	 
	 <!-- 实例工厂创建对象 -->
	  <bean id="p5" class="com.yc.spring.bean.Person"
	   factory-method="PersonFactory1"  factory-bean="personFactory">
	  	<property name="name" value="故三娘" ></property>
	 </bean>
	 
	 <bean id="personFactory" class="com.yc.spring.bean.Person">
	 </bean>
	 
	 <!-- 
		 scope="singleton" 单例模式 每次getBean都是同一个bean 
		 scope="prototype" 原型模式 每次getBean都会产生新的bean 
		 prototype 每次都会调用工厂方法
	 -->
	 <bean id="hello1" class="com.yc.spring.Hello" scope="prototype">
	 </bean>
	 
	 <!-- lazy-init : 懒加载。默认false,Spring容器启动时就会创建所有未配置懒加载的bean -->
	  <bean id="hello2" class="com.yc.spring.Hello" lazy-init="true">
	  	<constructor-arg name="a" value="100"></constructor-arg>
	 </bean>
	 
	 <!-- 生命周期 -->
	  <bean id="hello3" class="com.yc.spring.Hello" init-method="init" destroy-method="destroy" >
	 </bean>
	 
	 <!-- 
	 	 autowire="default" 自动装载，根据一些规则自动从IOC容器获取属性值
	 	 byName：用属性名从容器中获取指定id的bean
	 	 byType:用类名从容器中获取指定类型的bean
	 	 constructor:根据构造方法参数的类型获取bean
	 	 default ==> no 不自动装载
	  -->
	  <bean id="friend" class="com.yc.spring.bean.Person">
	 	 <property name="name" value="鲁智深" ></property>
	 </bean>
	 <bean id="p7" class="com.yc.spring.bean.Person" autowire="byName">
	 	 <property name="name" value="武松" ></property>
		 <property name="age" value="35" ></property>
	 </bean>
	 
	 
</beans>